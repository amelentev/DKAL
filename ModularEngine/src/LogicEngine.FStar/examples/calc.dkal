upon Init(i) as m
then 
   add NeedSum(1, 2)
   add NeedProduct(11, 22)
   add KnowsMath(_BOB_)
   drop m

upon NeedSum(x, y) as m
upon KnowsMath(p) 
 then fwd p (_ALICE_ said NeedSum(x, y))
      drop m

upon NeedProduct(x, y) as m
upon KnowsMath(p) then
fwd p (_ALICE_ said NeedProduct(x, y))
drop m

(* BOB's policy *)
upon (p said NeedSum(x, y)) as m
then 
   fwd p (_BOB_ said Sum(x, y, eval$(add "x" "y")$))
   drop m
            
upon (p said NeedProduct(x, y)) as m
then  
  send p (_BOB_ said Product(x, y, eval$(prod "x" "y")$))
  drop m

where _ALICE_ =
    {privkey=<RSAKeyValue><Modulus>kUWXmVPrxaQBAE+hxwzlzo/+hOTL60RIa2O+Ud0vnUUTB0OO+znVakY2dXnW/hqMa7cx49GCUFUx7iTv4cFYHPtAzFecyrbIzwLBdhbcATj2qpRVsrSoBtVRxEAqiktil5IhtCk7usy85HYDxNbVw/HWHvQRTd6cuYnKb4KNU1E=</Modulus><Exponent>AQAB</Exponent><P>xq4lK+sSdwEB1fCcyW5wQKfx74TWx+uxXjHunyXDKZhgkNiZ685VWr1kuiCfil2jOp8Hc/9WnlxcdH1nGvQXiQ==</P><Q>uy7hr+TXGQDNXyrje4MOIR9ZAlN1Oz5henc5IKBn+ddqlUQKH9rIqI/PQgBvT44bnnybBr2DiStafB9Hbs0jiQ==</Q><DP>xMnelZabznWX7OELWtThqJjwoM5Rsul34BXTBZ1wpjWAiFeSdacEkgD/0P/ZJkLDF6BG0JU7pVVUWimPw3m8CQ==</DP><DQ>hGb8AuQ29huoKXn34QTpuKoo1slb8iUE5JBym057XbFvVdgD5VZnezwGGaSfF8HobWmsas8gvKUq4wNpDsoSKQ==</DQ><InverseQ>nRitOmPpVe1vKg3Qq1+2SpCOlKxbfEED22CkRJxLVj8ElX0foB38RNJhHxnPvCAEvGdXVRLdeA4N5/nqU/pNyA==</InverseQ><D>N06ue+KWdeWNuAeZSQYhC/aIaSIOfOC/TZto3xP9x7t/lhlje0Q2e0KGA03Cy3ViFrRlWx3tphX5b3hCl8mbeMJLeOk8RFAWHVe3IpKr3Op+D8P2SD20/UopC4RaMlwsNSW++7a2ldifHCobZTwIAK68eR1cSL3gUt/sqnZOhcE=</D></RSAKeyValue>;
     pubkey=<RSAKeyValue><Modulus>kUWXmVPrxaQBAE+hxwzlzo/+hOTL60RIa2O+Ud0vnUUTB0OO+znVakY2dXnW/hqMa7cx49GCUFUx7iTv4cFYHPtAzFecyrbIzwLBdhbcATj2qpRVsrSoBtVRxEAqiktil5IhtCk7usy85HYDxNbVw/HWHvQRTd6cuYnKb4KNU1E=</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>;
     port=6301}

and _BOB_ = 
    {privkey=<RSAKeyValue><Modulus>w82NXJIdeCJnm9vNadVHErCaRkoCfU8pap6LDw6N27yHRTTcQcTYZD27D20Nsji21cljjhhpefocP3sa6zeI+VjgtWBB16axdh3eROyyC/1vpS8Q2TIraBrp6Ew8ld51/p35tu5HZhuzN2gltgSTrzsMOvNGfz4HIVUt+DjuDDk=</Modulus><Exponent>AQAB</Exponent><P>8odIOrLxHyb6lbh5qXd+BBMMOo0BDbH+W/B39y3+2YmSEb3uHhpUA+lrf3bMf0BXLRw695nUtWpC6b+sgo3pZQ==</P><Q>zq3XI8r6y2lwHTddCmczOWYL8oCz+z8t9Jf9/LPg+IN8HnYFxRy5ICLNzx0dgG3WaC4wjpk/royFQ3WTQqVURQ==</Q><DP>0jumxwtarPBzA9oXzGlCmXGRhie4pBCJN1VqCKCcbCIutqZ3hSy5a3KptqJafmxdpUL1crCsjF4ChvGaLsmpaQ==</DP><DQ>qot6jveMsdNEh2dK6C22cDPLwgT//1/oDQBqvl60Un01K3GaW0fTXzg4+iH9WR/Jn9gVi2Xbza34vWzE4mbIvQ==</DQ><InverseQ>0ZcWjOdE2Z3F9fdluvKeerIezF/3gzTmdHd9CYwPK/sIuEFP3tF0jzzJxGKFybxaGq0RYcnkkw74LwXSVOsJaw==</InverseQ><D>LkwECMdjwGwiI3AtecC8NWcck1IclJSLLnKeXskKMdK6CVseWU65+7m86UDX5DQUxyf/KjILfpPs6fWpv8Q51pE+ORHhyXOKPLDj/5vgHa0WFvFK3NoCsvB/ahIKINF+XpsWD7AmBWNJUPuqxZrCyYzv7qPT24gEJZCV9scmfIE=</D></RSAKeyValue>;
     pubkey=<RSAKeyValue><Modulus>w82NXJIdeCJnm9vNadVHErCaRkoCfU8pap6LDw6N27yHRTTcQcTYZD27D20Nsji21cljjhhpefocP3sa6zeI+VjgtWBB16axdh3eROyyC/1vpS8Q2TIraBrp6Ew8ld51/p35tu5HZhuzN2gltgSTrzsMOvNGfz4HIVUt+DjuDDk=</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>;
     port=6302}

and Init of int
and NeedSum of (int, int)
and NeedProduct of (int, int)
and KnowsMath of prin
and Sum of (int, int, int)
and Product of (int, int, int)
and $let add x y (env:subst) : term = 
       match (lookup env x), (lookup env y) with 
         | Some (Const (Int i)), Some (Const (Int j)) -> Const (Int (i + j))
         | _ -> raise "Impos"
    $

and $let prod x y (env:subst) : term = 
    match (lookup env x), (lookup env y) with 
      | Some (Const (Int i)), Some (Const (Int j)) -> Const (Int (i * j))
      | _ -> raise "Impos")
    $
