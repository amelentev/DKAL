(* common to all principals *)
upon Init(x) as m   
then learn Record(101, 1005, 42, "ala ma kota")
     learn Record(102, 1015, 42, "kot ma ale")
     learn Record(103, 1016, 42, "abecadlo")
     learn Record(104, 1100, 42, "z pieca spadlo")      (* id, patient, trial *)
     learn Trial(42, _ORG1_ , "highly classified trial") (* id, organizer, name *)
     learn BasicLeq(1000, 1005)
     learn BasicLeq(1005, 1250)
     learn BasicLeq(1000, 1015)
     learn BasicLeq(1015, 1250)
     learn BasicLeq(1000, 1016)
     learn BasicLeq(1016, 1250)
     learn BasicLeq(1000, 1100)
     learn BasicLeq(1016, 1250)

(*specific to phys1 *)
upon Init(x) as m
then learn PhysPatients(1015, "true")
     learn PhysPatients(1100, "true")

upon justified (site said PhysParticipates(_PHYS1_, trial, site)) as m1
upon justified (site said
                 PhysAllocatedPatients(_PHYS1_, p1, p2, trial, site)) as m2
if and(PhysPatients(number, "true"),
       BasicLeq(p1, number),
       BasicLeq(number, p2),
       Record(r, number, trial, datarecord),
       Trial(trial, org, datatrial))
upon justified =>(x,
                  org said MayRead(_PHYS1_, r)) as m3
upon justified =>(y,
                  site said MayRead(_PHYS1_, r)) as m4
then send _KEYMGR_ RequestToRead(_PHYS1_, r)
     send _KEYMGR_ (_PHYS1_ said
                      =>(x, org said MayRead(_PHYS1_, r)))
     send _KEYMGR_ (_PHYS1_ said
                      =>(y, site said MayRead(_PHYS1_, r)))
     drop m2

using "clinical.cfg" as _PHYS1_