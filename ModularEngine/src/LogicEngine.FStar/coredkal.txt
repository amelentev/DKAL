Core DKAL, i.e., DKAL minus substrate updates ... 

  Constants c ::= tt | ff | p | s 

  Variables x

  Sub query q ::= R i1 ... ik

  Types     t ::= Boolean 
               | Infon 
               | Principal 
               | SubQuery 
               | Evidence

  Evidence  e ::= EmptyEv | SigEv | MPEv | AndEv | AsInfonEv 

  Infons   i,j ::= x 
               | c 
               | Empty
               | AsInfon q
               | And i j
               | Implies i j
               | Said i j
               | forall (x:t). i  <---- Explicit quantifiers in this version
               | Justified i j    <---- It's in the impl, but not in the formalization

  Infostrate K ::= . | i, K 

  Substrate  S ::= . | (R c1 .. cn) | S, S' 

  Var decl   G ::= . | x:t | G, G'

  Prefix  pref ::= hole | Said p pref

--------------------------------------------------------------------------------

                __________
               |          |
               | G |- u:t |  Well-typed terms
               |__________| 

   -----------------------
     G, x:t, G' |- x:t

   --------------------
     G |- tt:Boolean

   --------------------
     G |- ff:Boolean


   --------------------
     G |- p:Principal

   --------------------
     G |- Empty:Infon


     G |- q:SubQuery        <--- Base cases for subquery?
   --------------------
     G |- AsInfon q:Infon


     G |- i: Principal
     G |- j: Infon
   --------------------
     G |- Said i j:Infon


     G |- i: Infon
     G |- j: Evidence    <-------- Base cases?
   --------------------
     G |- Justified i j:Infon


     G,x:t |- i: Infon
   --------------------
     G |- forall (x:t). i


                _____________
               |             |
               | i[u/x] = i' |  Definition of substitution
               |_____________|


 TODO (capture avoiding subst. straightforward)

                _______________
               |               |
               | S; K; G |= i  |  Infon entailment in a substrate, infostrate, 
               |_______________|  and variable decl environment



 Well-formedness of a context:
     -- S is a set of closed relations
     -- K is a set of closed infons
     -- G is a set of unique bindings



  -------------------------- [Emp]  [ Q: Same as T? ] (logic axiom)
    S; K; G |= pref Empty


     i \in K
  ---------------- [Hyp-Knowledge]
    S; K; G |= i


    q \in S 
  ------------------------- [Hyp-Substrate]
    S; K; G |= AsInfon q


    S; K; G,x:t |= pref i
  ---------------------------------------- [Q-Intro]
    S; K; G |= pref (forall (x:t). i)


    S; K; G |= pref (forall (x:t). i)
    S; K; G |- u:t
  -------------------------------------- [Q-Inst]
    S; K; G |= pref (i [u/x])

    S; K; G |= pref i
    S; K; G |= pref j
  -------------------------- [And-Intro]
    S; K; G |= pref (And i j)


    S; K; G |= pref (And i j) 
  ------------------------- [And-Elim1]
    S; K; G |= pref i


    S; K; G |= pref (And i j) 
  --------------------------- [And-Elim2]
    S; K; G |= pref j


    S; K; G |= pref j
  ------------------------------- [W-Imp-Intro]
    S; K; G |= pref (Implies i j)


    S; K; G |= pref (Implies i j)
    S; K; G |= pref i
  ----------------------- [Imp-Elim]
    S; K; G |= pref j

Justification?
