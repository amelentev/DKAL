substrate sql("Server=localhost,1136;Database=ClinicalTrials;User ID=dkal;Password=dkal;Trusted_Connection=True;Encrypt=False;MultipleActiveResultSets=True;", "schema.dbml")
	namespaces "ct"
substrate xml("keys.xml")
	namespaces "keys"

type Int = System.Int32
type Boolean = System.Boolean
type String = System.String
type Trial = Int
type Record = Int
type Principal = Dkal.Principal
type Infon = Dkal.Infon
type Evidence = Dkal.Evidence

relation requestToRead(P: Principal, R: Record)
relation mayRead(PHYS: Principal, R: Int)
relation keyForRecord(K: Int, R: Record)

macro record (N: Int, T:Trial): Record
    {| "ct" | records.patient == N && 
                records.trial == T &&
                Ret == records.id |}

macro org(T: Trial) : String
    {| "ct" | T == trials.id && 
                Ret == trials.organizer |}

with X: Infon, E: Evidence
    upon X [E]
    do
        learn X [E]                
                
with PERSON: Principal, ORG: Principal, TRIAL: Trial, R: Record, K: Int, N: Int
	upon 
		PERSON said requestToRead(PERSON, R) [_]
    if
		ORG said mayRead(PERSON, R) [_]
	if
		asInfon({|"ct"|
			ppalName(ORG) == org(TRIAL) &&
			R == record(N, TRIAL)
		|})
    if
		asInfon({|"keys"|
			"/keys/key[@record='$R']/@key" | K
		|})
	do
		say with justification to PERSON:
			keyForRecord(K, R)
            