substrate sql("Server=localhost,1136;Database=edkaldemo;User ID=dkal;Password=dkal;Trusted_Connection=True;Encrypt=False;", "schema.dbml")
	namespaces "ct"
substrate xml("keys.xml")
	namespaces "keys"

type Int = System.Int32
type Trial = Int
type Principal = Dkal.Principal
type Record = Int

relation requestToRead(P: Principal, R: Record)
relation mayRead(PHYS: Principal, R: Int)

relation keyForRecord(K: Int, R: Record)

macro key(R: Record) : Int
{|"ct"| keys.record == R && Ret == keys.thekey |}

macro ppalId(P: Principal) : Int
{|"ct"| Ret == dkal_principals.id && dkal_principals.name == ppalName(P)|}

macro record (N: Int, T:Trial): Record
{|"ct"| Ret == records.id && records.patient == N && records.trial == T |}

macro org(T: Trial) : Int
{|"ct"| T==trials.id && Ret==trials.cro |}

with PERSON: Principal, ORG: Principal, TRIAL: Trial, R: Record, K: Int, N: Int
	upon
		(PERSON said requestToRead(PERSON, R)) &&
		(PERSON said ORG said mayRead(PERSON, R))
	if
		asInfon({|"ct"|
			ppalId(ORG) == org(TRIAL) &&
			R == record(N, TRIAL)
		|})
	if
		asInfon({|"keys"|
			"/keys/key[@record='$R']/@key" | K
		|})
	do
		send to PERSON:
			keyForRecord(K, R)
            