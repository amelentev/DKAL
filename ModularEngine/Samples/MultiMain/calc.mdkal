// common declarations
type Int = System.Int32

relation sum(X: Int, Y: Int, Z: Int)
relation needSum(X: Int, Y: Int)
relation product(X: Int, Y: Int, Z: Int)
relation needProduct(X: Int, Y: Int)

relation knowsMath(P: Dkal.Principal)

---alice--------------------------
// alice's policy
do once
	learn needSum(1, 2)
	learn needProduct(11, 22)
	learn knowsMath(bob)
	
with X: Int, Y: Int, P: Dkal.Principal
	if
		needSum(X, Y) && knowsMath(P)
	do
		say to P:
			needSum(X, Y)
		forget
			needSum(X, Y)

with X: Int, Y: Int, P: Dkal.Principal
	if
		needProduct(X, Y) && knowsMath(P)
	do
		say to P:
			needProduct(X, Y)
		forget
			needProduct(X, Y)
			
---bob--------------------------
// bob's policy
with X: Int, Y: Int, Z: Int, P: Dkal.Principal
	upon
		P said needSum(X, Y)
	if
		asInfon({|"basic"|Z:=X+Y|})
	do
		say to P:
			sum(X, Y, Z)
		drop
			P said needSum(X, Y)
			
with X: Int, Y: Int, Z: Int, P: Dkal.Principal
	upon
		P said needProduct(X, Y)
	if
		asInfon({|"basic"|Z:=X*Y|})
	do
		say to P:
			product(X, Y, Z)
		drop
			P said needProduct(X, Y)			